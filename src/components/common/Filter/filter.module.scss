@import '../../../assets/styles/vars.scss';

.filter {
  display: flex;
  flex-flow: column;
  &:not(:last-child) .filterButton {
    border-right: $border;
  }
  .label {
    font-weight: bold;
    margin-bottom: 5px;
  }
  &.disabled {
    .label {
      @include disabled();
    }
  }
  .input {
    .filterButton {
      $background-color: white;
      background-color: $background-color;
      padding: 5px 20px;
      cursor: pointer;
      line-height: 0;
      display: flex;
      align-items: center;
      justify-content: space-between;
      min-width: 258.19px;
      span {
        white-space: nowrap;
      }
      &.selected span.field {
        font-weight: bold;
      }
      span.selections {
        font-style: italic;
      }
      i,
      img {
        vertical-align: middle;
        margin-left: 20px;
        width: 20px;
        height: 24px;
      }
      &:hover,
      &.shown {
        background-color: darken($background-color, 10%);
        transition: background-color 0.125s;
      }

      &:active {
        background-color: darken($background-color, 20%);
        @include boxShadow();
      }
      &.disabled {
        @include disabled();
      }
    }
    .filterMenu {
      position: absolute;
      transition: opacity 0.125s;
      opacity: 0;
      pointer-events: none;
      z-index: 2;
      background-color: white;
      &.shown {
        opacity: 1;
        pointer-events: all;
        @include boxShadow();
      }

      > div {
        // height: unset !important;
      }
      max-width: 50vw;

      &:not(.dateRange) {
        min-width: 300px;
      }
      // height: unset !important;
      // height: min-content !important;

      .filterMenuWrapper {
        &.disabled * {
          background-color: red !important;
        }
      }

      &,
      div[class^='ReactVirtualized__Grid '] {
        // height: max-content !important;

        div[class='ReactVirtualized__Grid__innerScrollContainer'] {
          // overflow-y: scroll !important;
          // max-height: 200px !important;
        }
      }

      div[class^='kn-item__item__'] {
        & + div {
          // height: max-content !important;
          // position: unset !important;
        }
      }

      div[class^='kn-column__column'] {
        // height: max-content !important;
      }
    }
  }

  .hideRangeSelection {
    width: auto;
    button[class*='rdrDayToday'] {
      span::after {
        background: #3d91ff !important;
      }
    }
    button {
      &:not([class*='rdrDayPassive']) {
        // &:not([class*="rdrDayPassive"]):not([class*="rdrDayToday"]) {
        [class*='rdrInRange'] {
          &,
          * {
            background: transparent;
            + span > span {
              color: $dark-blue;
            }
          }
        }
      }
    }
  }
}

@media #{$phone} {
  .filter:not(:last-child) {
    .filterButton {
      border-right: none;
    }
  }
}
@import './responsive.module.scss';
@import './plugins.module.scss';
